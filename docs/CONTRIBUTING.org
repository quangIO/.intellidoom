#+TITLE: Contribution guidelines

First off, thank you for considering contributing to Intellimacs.

If your contribution is not straightforward, please first discuss the change you
wish to make by creating a new issue before making the change.

* Reporting issues
  Issues have to be reported on our [[https://github.com/MarcoIeni/intellimacs/issues][issues tracker]]. Please:
  - Check that the issue has not already been reported.
    - This can be achieved by searching keywords on the [[https://github.com/MarcoIeni/intellimacs/issues][issues tracker]].
  - Try to use a clear title, and describe your problem with complete sentences.
    - If it is a bug report, try to include details on how to reproduce it, like
      a step by step guide.

* Pull requests
  Try to do one pull request per change.
  For example, if you want to introduce two new unrelated actions, then create
  two different pull requests.

** Updating the changelog
   Update the changes you have made in [[file:docs/CHANGELOG.org][CHANGELOG.org]] file under the =Unreleased=
   section.

   Add the changes of your pull request to one of the following subsections,
   depending on the types of changes defined by [[https://keepachangelog.com/en/1.0.0/][Keep a changelog]]:
   - Added :: for new features.
   - Changed :: for changes in existing functionality.
   - Deprecated :: for soon-to-be removed features.
   - Removed :: for now removed features.
   - Fixed :: for any bug fixes.
   - Security :: in case of vulnerabilities.

   If the required subsection does not exist yet under =Unreleased=, create it!

** Updating key bindings
   If you edit key bindings, update [[file:docs/KEYBINDINGS.org][KEYBINDINGS.org]].

** Commit messages
   Write commit messages according to adapted [[http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html][Tim Pope's guidelines]]:

   - Use present tense and write in the imperative: “Fix bug”, not “fixed bug” or
     “fixes bug”.
   - Start with a capitalized, short (72 characters or less) summary, followed by a
     blank line.
   - If necessary, add one or more paragraphs with details, wrapped at 72
     characters.
   - Separate paragraphs by blank lines.

   This is a model commit message:

   #+begin_EXAMPLE
   Capitalized, short (72 chars or less) summary

   More detailed explanatory text, if necessary.  Wrap it to about 72
   characters or so.  In some contexts, the first line is treated as the
   subject of an email and the rest of the text as the body.  The blank
   line separating the summary from the body is critical (unless you omit
   the body entirely); tools like rebase can get confused if you run the
   two together.

   Write your commit message in the imperative: "Fix bug" and not "Fixed bug"
   or "Fixes bug."  This convention matches up with commit messages generated
   by commands like git merge and git revert.

   Further paragraphs come after blank lines.

   - Bullet points are okay, too

       - Typically a hyphen or asterisk is used for the bullet, followed by a
         single space, with blank lines in between, but conventions vary here

       - Use a hanging indent
   #+end_EXAMPLE

* Credits
  This file is partially based on the [[https://develop.spacemacs.org/CONTRIBUTING.html][Spacemacs Contribution guidelines]].
